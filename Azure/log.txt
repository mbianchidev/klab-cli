[0m[1mmodule.AKS.module.aks.data.azurerm_resource_group.main: Reading...[0m[0m
[0m[1mmodule.AKS.module.aks.data.azurerm_resource_group.main: Read complete after 0s [id=/subscriptions/20310004-37c5-4ec8-94a1-5962d2cf62f6/resourceGroups/kubelab-testing][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # module.AKS.module.aks.azurerm_kubernetes_cluster.main[0m will be created
[0m  [32m+[0m[0m resource "azurerm_kubernetes_cluster" "main" {
      [32m+[0m[0m api_server_authorized_ip_ranges     = (known after apply)
      [32m+[0m[0m azure_policy_enabled                = false
      [32m+[0m[0m dns_prefix                          = "testing"
      [32m+[0m[0m fqdn                                = (known after apply)
      [32m+[0m[0m http_application_routing_enabled    = false
      [32m+[0m[0m http_application_routing_zone_name  = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m image_cleaner_enabled               = false
      [32m+[0m[0m image_cleaner_interval_hours        = 48
      [32m+[0m[0m kube_admin_config                   = (sensitive value)
      [32m+[0m[0m kube_admin_config_raw               = (sensitive value)
      [32m+[0m[0m kube_config                         = (sensitive value)
      [32m+[0m[0m kube_config_raw                     = (sensitive value)
      [32m+[0m[0m kubernetes_version                  = "1.26"
      [32m+[0m[0m location                            = "eastus"
      [32m+[0m[0m name                                = "aks-managed"
      [32m+[0m[0m node_resource_group                 = (known after apply)
      [32m+[0m[0m node_resource_group_id              = (known after apply)
      [32m+[0m[0m oidc_issuer_enabled                 = false
      [32m+[0m[0m oidc_issuer_url                     = (known after apply)
      [32m+[0m[0m portal_fqdn                         = (known after apply)
      [32m+[0m[0m private_cluster_enabled             = false
      [32m+[0m[0m private_cluster_public_fqdn_enabled = false
      [32m+[0m[0m private_dns_zone_id                 = (known after apply)
      [32m+[0m[0m private_fqdn                        = (known after apply)
      [32m+[0m[0m public_network_access_enabled       = true
      [32m+[0m[0m resource_group_name                 = "kubelab-testing"
      [32m+[0m[0m role_based_access_control_enabled   = false
      [32m+[0m[0m run_command_enabled                 = true
      [32m+[0m[0m sku_tier                            = "Free"
      [32m+[0m[0m workload_identity_enabled           = false

      [32m+[0m[0m default_node_pool {
          [32m+[0m[0m enable_auto_scaling    = true
          [32m+[0m[0m enable_host_encryption = false
          [32m+[0m[0m enable_node_public_ip  = false
          [32m+[0m[0m kubelet_disk_type      = (known after apply)
          [32m+[0m[0m max_count              = 2
          [32m+[0m[0m max_pods               = (known after apply)
          [32m+[0m[0m min_count              = 1
          [32m+[0m[0m name                   = "nodepool"
          [32m+[0m[0m node_count             = (known after apply)
          [32m+[0m[0m node_labels            = (known after apply)
          [32m+[0m[0m orchestrator_version   = (known after apply)
          [32m+[0m[0m os_disk_size_gb        = 50
          [32m+[0m[0m os_disk_type           = "Managed"
          [32m+[0m[0m os_sku                 = (known after apply)
          [32m+[0m[0m scale_down_mode        = "Delete"
          [32m+[0m[0m type                   = "VirtualMachineScaleSets"
          [32m+[0m[0m ultra_ssd_enabled      = false
          [32m+[0m[0m vm_size                = "Standard_D2s_v3"
          [32m+[0m[0m workload_runtime       = (known after apply)
        }

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }

      [32m+[0m[0m network_profile {
          [32m+[0m[0m dns_service_ip     = (known after apply)
          [32m+[0m[0m docker_bridge_cidr = (known after apply)
          [32m+[0m[0m ip_versions        = (known after apply)
          [32m+[0m[0m load_balancer_sku  = "standard"
          [32m+[0m[0m network_mode       = (known after apply)
          [32m+[0m[0m network_plugin     = "kubenet"
          [32m+[0m[0m network_policy     = (known after apply)
          [32m+[0m[0m outbound_type      = "loadBalancer"
          [32m+[0m[0m pod_cidr           = (known after apply)
          [32m+[0m[0m pod_cidrs          = (known after apply)
          [32m+[0m[0m service_cidr       = (known after apply)
          [32m+[0m[0m service_cidrs      = (known after apply)
        }

      [32m+[0m[0m oms_agent {
          [32m+[0m[0m log_analytics_workspace_id = (known after apply)
          [32m+[0m[0m oms_agent_identity         = (known after apply)
        }
    }

[1m  # module.AKS.module.aks.azurerm_log_analytics_solution.main[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_log_analytics_solution" "main" {
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m location              = "eastus"
      [32m+[0m[0m resource_group_name   = "kubelab-testing"
      [32m+[0m[0m solution_name         = "ContainerInsights"
      [32m+[0m[0m workspace_name        = "testing-workspace"
      [32m+[0m[0m workspace_resource_id = (known after apply)

      [32m+[0m[0m plan {
          [32m+[0m[0m name      = (known after apply)
          [32m+[0m[0m product   = "OMSGallery/ContainerInsights"
          [32m+[0m[0m publisher = "Microsoft"
        }
    }

[1m  # module.AKS.module.aks.azurerm_log_analytics_workspace.main[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_log_analytics_workspace" "main" {
      [32m+[0m[0m allow_resource_only_permissions    = true
      [32m+[0m[0m daily_quota_gb                     = -1
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m internet_ingestion_enabled         = true
      [32m+[0m[0m internet_query_enabled             = true
      [32m+[0m[0m local_authentication_disabled      = false
      [32m+[0m[0m location                           = "eastus"
      [32m+[0m[0m name                               = "testing-workspace"
      [32m+[0m[0m primary_shared_key                 = (sensitive value)
      [32m+[0m[0m reservation_capacity_in_gb_per_day = (known after apply)
      [32m+[0m[0m resource_group_name                = "kubelab-testing"
      [32m+[0m[0m retention_in_days                  = 30
      [32m+[0m[0m secondary_shared_key               = (sensitive value)
      [32m+[0m[0m sku                                = "PerGB2018"
      [32m+[0m[0m workspace_id                       = (known after apply)
    }

[1mPlan:[0m 3 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m cluster_name           = "aks-managed"
  [32m+[0m[0m cluster_region         = "eastus"
  [32m+[0m[0m cluster_resource_group = "kubelab-testing"
[0m[1mmodule.AKS.module.aks.azurerm_log_analytics_workspace.main[0]: Creating...[0m[0m
[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mA resource with the ID "/subscriptions/20310004-37c5-4ec8-94a1-5962d2cf62f6/resourceGroups/kubelab-testing/providers/Microsoft.OperationalInsights/workspaces/testing-workspace" already exists - to be managed via Terraform this resource needs to be imported into the State. Please see the resource documentation for "azurerm_log_analytics_workspace" for more information.[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  with module.AKS.module.aks.azurerm_log_analytics_workspace.main[0],
[31mâ”‚[0m [0m  on .terraform/modules/AKS.aks/main.tf line 224, in resource "azurerm_log_analytics_workspace" "main":
[31mâ”‚[0m [0m 224: resource "azurerm_log_analytics_workspace" "main" [4m{[0m[0m
[31mâ”‚[0m [0m
[31mâ•µ[0m[0m
