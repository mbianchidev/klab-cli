apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
---
{%- for prometheus_cluster_role in prometheus_cluster_role_file_path %}
{% include prometheus_cluster_role %}
---
{%- endfor %}
{%- for cluster_role in cluster_roles %}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ cluster_roles.cluster_role_binding_name | default("default_cluster_role_binding") }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ prometheus_cluster_role_metadata_name | default("prometheus") }}
subjects:
- kind: ServiceAccount
  name: {{ cluster_roles.cluster_service_account_name | default("default") }}
  namespace: {{ namespace }}
---
{%- endfor %}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ prometheus_configmap_configuration_name | default("prometheus-server-conf") }}
  labels:
    {%- for label_key, label_value in prometheus_configmap_labels.items() %}
    {{ label_key ~ ":" ~ " " ~ label_value | safe }}
    {%- endfor %}
  namespace: {{ namespace }}
data:
  {{ prometheus_rules_file_path.split('/')[-1] }}: |-
    {%- macro render_with_indent() %}{% include prometheus_rules_file_path %}{% endmacro %}
    {{ render_with_indent()|indent }}
  {{ prometheus_configuration_file_path.split('/')[-1] }}: |-
    {%- macro render_with_indent() %}{% include prometheus_configuration_file_path %}{% endmacro %}
    {{ render_with_indent()|indent }}
---
{%- if volumes %}
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ prometheus_efs_sc_metadata_name | default("prometheus-efs-sc") }}
  namespace: {{ namespace }}
provisioner: {{ prometheus_efs_sc_provisioner | default("efs.csi.aws.com") }}
parameters:
  provisioningMode: {{ prometheus_efs_sc_provisioningMode | default("efs-ap") }}
  fileSystemId: {{ prometheus_efs_sc_fileSystemId }}
  directoryPerms: {{ prometheus_efs_sc_directoryPerms | default("'755'") | safe }}
  basePath: {{ prometheus_efs_sc_basePath | default("'/prometheus_dynamic_provisioning'") | safe }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ prometheus_efs_pvc_metadata_name | default("prometheus-efs-pvc") }}
  namespace: {{ namespace }}
spec:
  accessModes:
{%- for prometheus_efs_pvc_accessMode in prometheus_efs_pvc_accessModes %}
    - {{ prometheus_efs_pvc_accessMode }}
{%- endfor %}
  storageClassName: {{ prometheus_efs_sc_metadata_name | default("prometheus-efs-sc") }}
  resources:
    requests:
      storage: {{ prometheus_efs_pvc_resources_storage | default("5Gi") }}
---
{%- endif %}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ prometheus_deployment_metadata_name | default("prometheus-deployment") }}
  namespace: {{ namespace }}
  labels:
    {%- for label_key, label_value in prometheus_deployment_labels.items() %}
    {{ label_key ~ ":" ~ " " ~ label_value | safe }}
    {%- endfor %}
spec:
  replicas: {{ prometheus_deployment_spec_replicas | default("1") }}
  selector:
    matchLabels:
      {%- for label_key, label_value in prometheus_deployment_labels.items() %}
      {{ label_key ~ ":" ~ " " ~ label_value | safe }}
      {%- endfor %}
  template:
    metadata:
      labels:
        {%- for label_key, label_value in prometheus_deployment_labels.items() %}
        {{ label_key ~ ":" ~ " " ~ label_value | safe }}
        {%- endfor %}
    spec:
      containers:
        - name: {{ prometheus_deployment_container_name | default("prometheus-container") }}
          image: {{ prometheus_deployment_container_image | default("prom/prometheus") }}
          args:
            - {{ "--config.file=/etc/prometheus/" ~ prometheus_configuration_file_path.split('/')[-1] }}
            - {{ "--storage.tsdb.path=" ~ prometheus_storage_tsdb_path | default("/prometheus/") }}
          ports:
            - containerPort: {{ prometheus_deployment_container_port | default("9090") }}
          volumeMounts:
            - name: {{ prometheus_deployment_config_volume_name | default("prometheus-config-volume") }}
              mountPath: {{ prometheus_deployment_config_volume_mountPath | default("/etc/prometheus/") }}
          {%- if volumes %}
            - name: {{ prometheus_deployment_efs_volume_name | default("prometheus-volume") }}
              mountPath: {{ prometheus_deployment_efs_volume_mountPath | default("/prometheus") }}
          {%- endif %}
      volumes:
        - name: {{ prometheus_deployment_config_volume_name | default("prometheus-config-volume") }}
          configMap:
            defaultMode: {{ prometheus_deployment_config_volume_defaultMode | default("420") }}
            name: {{ prometheus_configmap_configuration_name | default("prometheus-server-conf") }}
      {%- if volumes %}
        - name: {{ prometheus_deployment_efs_volume_name | default("prometheus-volume") }}
          persistentVolumeClaim:
            claimName: {{ prometheus_efs_pvc_metadata_name | default("prometheus-efs-pvc") }}
      {%- endif %}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ prometheus_service_metadata_name | default("prometheus-service") }}
  namespace: {{ namespace }}
spec:
  selector:
    {%- for label_key, label_value in prometheus_deployment_labels.items() %}
    {{ label_key ~ ":" ~ " " ~ label_value | safe }}
    {%- endfor %}
  ports:
    - name: {{ prometheus_service_port_name | default("web-http") }}
      port: {{ prometheus_service_port | default("9090") }}
      targetPort: {{ prometheus_deployment_container_port | default("9090") }}