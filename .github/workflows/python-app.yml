name: KubeLab CLI - labctl CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 255 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=255 --statistics
    #- name: Test with pytest
    # run: |
    #   pytest test/
    - name: Build Python package
      run: |
        python -m build

    - name: Set Version
      id: set_version
      run: |
        if [ -z "${{ env.VERSION }}" ]; then
          LATEST_TAG=$(git describe --abbrev=0 --tags 2>/dev/null)
          if [ -z "$LATEST_TAG" ]; then
            # If no tags exist, set the version to 0.1.0
            export VERSION="0.1.0"
          else
            # If tags exist, increment the patch version
            VERSION_PARTS=(${LATEST_TAG//./ })
            PATCH=$((VERSION_PARTS[2] + 1))
            export VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        fi
    - name: Create and Push Tag
      if: ${{ env.VERSION != '' }}
      run: |
        git tag -a "v${{ env.VERSION }}" -m "Version ${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"

    - name: Publish to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        tag_name: ${{ env.VERSION }}
        body: "Release ${{ env.VERSION }}"
