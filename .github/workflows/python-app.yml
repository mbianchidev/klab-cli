name: KubeLab CLI - labctl CI/CD

on:
  push:
    tags:        
      - v*
  pull_request:
    branches: [ "main" ] # this will be commented

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip' # caching pip dependencies will speed up subsequent runs
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 255 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=255 --statistics
    #- name: Test with pytest
    # run: |
    #   pytest test/
    - name: Build Python package
      run: |
        python -m build
    - name: Publish to GitHub Releases
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/*
        tag_name: ${{github.ref_name}}
        body: "Release ${{github.ref_name}}"
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
    - name: Publish distribution to PyPI if tagged
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
